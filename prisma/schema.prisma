datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

model Users {
  id                    String                  @unique @db.VarChar(255)
  email                 String                  @unique(map: "email") @db.VarChar(255)
  username              String
  icon_name             String?
  banner_name           String?
  hashed_password       String
  create_at             String
  flags                 String
  Forum_posts           Forum_post[]
  Forum_post_comments   Forum_post_comment[]
  Forum_post_reactions  Forum_post_reactions[]
  Forum_posts_seen      User_posts_seen[]
  Chats                 User_chats[]
  User_chat_permissions User_chat_permissions[]
}

model User_chat_permissions {
  id      String @unique @db.VarChar(255)
  user_id String @unique @db.VarChar(255)
  chat_id String @unique @db.VarChar(255)
  user    Users  @relation(fields: [user_id], references: [id])
  chat    Chats  @relation(fields: [chat_id], references: [id])
  permit  String @unique @db.VarChar(255)
}

model User_chats {
  id          String  @unique @db.VarChar(255)
  user_id     String  @unique @db.VarChar(255)
  user        Users   @relation(fields: [user_id], references: [id])
  nickname    String?
  icon_name   String?
  banner_name String?
  create_at   String
  type        String
  flags       String?
}

model Chats {
  id          String                  @unique @db.VarChar(255)
  name        String?                 @unique @db.VarChar(255)
  icon_name   String?
  banner_name String?
  create_at   String
  type        String
  flags       String?
  permission  User_chat_permissions[]
}

model Shops {
  id                String  @unique @db.VarChar(255)
  username          String  @unique @db.VarChar(255)
  name              String  @unique @db.VarChar(255)
  create_at         String  @unique @db.VarChar(255)
  create_by         String  @unique @db.VarChar(255)
  icon_name         String  @unique @db.VarChar(255)
  banner_name       String  @unique @db.VarChar(255)
  short_description String  @unique @db.VarChar(255)
  long_description  String  @unique @db.VarChar(255)
  flags             String? @db.VarChar(255)
}

model Products {
  id                String           @unique @db.VarChar(255)
  shop_id           String           @unique @db.VarChar(255)
  category_id       String           @unique @db.VarChar(255)
  category          Product_category @relation(fields: [category_id], references: [id])
  name              String           @unique @db.VarChar(255)
  price             String           @unique @db.VarChar(255)
  flags             String           @unique @db.VarChar(255)
  images            String           @unique @db.VarChar(255)
  create_at         String           @unique @db.VarChar(255)
  create_by         String           @unique @db.VarChar(255)
  icon_name         String           @unique @db.VarChar(255)
  banner_name       String           @unique @db.VarChar(255)
  short_description String           @unique @db.VarChar(255)
  long_description  String           @unique @db.VarChar(255)
}

model Product_category {
  id                String    @unique @db.VarChar(255)
  create_at         String    @unique @db.VarChar(255)
  create_by         String    @unique @db.VarChar(255)
  icon_name         String    @unique @db.VarChar(255)
  banner_name       String    @unique @db.VarChar(255)
  short_description String    @unique @db.VarChar(255)
  long_description  String    @unique @db.VarChar(255)
  flags             String    @unique @db.VarChar(255)
  Products          Products?
}

model Login_states {
  id        String  @unique @db.VarChar(255)
  user_id   String  @db.VarChar(255)
  create_at String  @db.VarChar(255)
  state     String  @db.VarChar(255)
  auth_type String  @default("") @db.VarChar(255)
  platform  String  @db.VarChar(255)
  next_step String  @db.VarChar(255)
  status    String  @db.VarChar(255)
  flags     String? @db.VarChar(255)
}

model User_sessions {
  id            String  @unique @db.VarChar(255)
  create_at     String  @db.VarChar(255)
  create_by     String  @db.VarChar(255)
  expire_at     String  @db.VarChar(255)
  user_id       String  @db.VarChar(255)
  state         String  @db.VarChar(255)
  access_token  String  @db.VarChar(255)
  refresh_token String  @db.VarChar(255)
  agent         String  @db.VarChar(255)
  platform      String  @db.VarChar(255)
  ip            String  @db.VarChar(255)
  flags         String? @db.VarChar(255)
}

model Shop_permissions {
  id      String @unique @db.VarChar(255)
  user_id String @unique @db.VarChar(255)
  shop_id String @unique @db.VarChar(255)
  flags   String @unique @db.VarChar(255)
}

model Forum_post_comment {
  id         String     @unique @db.VarChar(255)
  content    String
  user       Users      @relation(fields: [userId], references: [id])
  userId     String
  post_id    String
  post       Forum_post @relation(fields: [post_id], references: [id])
  created_at String     @db.VarChar(255)
  updated_at String     @db.VarChar(255)
  flags      String?    @db.VarChar(255)
}

model Forum_post_reactions {
  id         String     @unique @db.VarChar(255)
  reaction   String
  user       Users      @relation(fields: [userId], references: [id])
  userId     String
  post_id    String
  posts      Forum_post @relation(fields: [post_id], references: [id])
  created_at String     @db.VarChar(255)
  updated_at String     @db.VarChar(255)
  flags      String?    @db.VarChar(255)
}

model Forum_topic {
  id          String       @id @unique @db.VarChar(255)
  title       String       @unique @db.VarChar(255)
  description String       @db.VarChar(255)
  forum_posts Forum_post[]
  created_at  String       @db.VarChar(255)
  updated_at  String       @db.VarChar(255)
  flags       String?      @db.VarChar(255)
  icon        String       @db.VarChar(255)
}

model Forum_post {
  id           String                 @id @unique @db.VarChar(255)
  title        String
  image        String?
  content      String
  create_at    String                 @db.VarChar(255)
  update_at    String                 @db.VarChar(255)
  user_id      String                 @db.VarChar(255)
  user         Users                  @relation(fields: [user_id], references: [id])
  forum_topics Forum_topic[]
  comments     Forum_post_comment[]
  reactions    Forum_post_reactions[]
  seens        User_posts_seen[]
  flag         String?                @default("pending")
}

model User_posts_seen {
  user_id String     @unique @db.VarChar(255)
  post_id String     @unique @db.VarChar(255)
  user    Users      @relation(fields: [user_id], references: [id])
  post    Forum_post @relation(fields: [post_id], references: [id])
  see_at  String     @db.VarChar(255)
  flags   String?    @db.VarChar(255)
}
